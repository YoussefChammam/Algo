/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package de.htw;

import de.htw.console.Implementation.Console;
import de.htw.commands.CommandFactory;
import de.htw.commands.ICommand;
import de.htw.console.IConsole;

import java.util.LinkedList;

public class App {

    //Main that will run with ./gradlew run
    public static void main(String[] args) {
        IConsole console = new Console();
        CommandFactory factory = new CommandFactory(console);
        LinkedList<ICommand> cmds = factory.returnCommands();
        commandLine(cmds, console);
    }

    //Function for checking if value entered in command line is in the bounds.
    private static boolean isValidOption(int index, int max) {
        return index >= 0 && index < max;
    }


    //Our command line that will keep working and printing values/possibilities and executing until we exit.
    private static void commandLine(LinkedList<ICommand> cmds, IConsole console) {
        do {
            printCmd();
            ICommand cmd = selectAnOption(cmds, console);
            cmd.execute();
        } while (true);
    }

    //Function for showing all of our options to the user.
    private static void printCmd() {
        System.out.println(
                """
                         1. Greatest Common Divisor (GCD) - (Recursive) Euclid's algorithm subtraction.
                         2. Greatest Common Divisor (GCD) - (Iterative) Euclid's algorithm subtraction.
                         3. Greatest Common Divisor (GCD) - (Recursive) Euclid's algorithm division rest.
                         4. Greatest Common Divisor (GCD) - (Iterative) Euclid's algorithm division rest.
                         5. Sieb of Eratosthenes.
                         6. Search for a specific string within your text and get back the index.
                         0. Exit.\040"""
        );
    }

    private static ICommand selectAnOption(LinkedList<ICommand> cmds, IConsole console) {
        do {
            int selectedOption = console.readInteger("Choose a function: ");
            if (isValidOption(selectedOption, cmds.size())) {
                return cmds.get(selectedOption);
            }
        } while (true);
    }
}